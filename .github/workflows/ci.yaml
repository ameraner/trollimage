name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: true
      matrix:
        os: ["windows-latest", "ubuntu-latest", "macos-latest"]
        python-version: ["3.9", "3.10", "3.11"]
        experimental: [false]
        include:
          - python-version: "3.11"
            os: "ubuntu-latest"
            experimental: true

    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
      UNSTABLE: ${{ matrix.experimental }}
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          python-version: ${{ matrix.python-version }}
          activate-environment: test-environment
          channels: conda-forge
          channel-priority: strict
          environment-file: continuous_integration/environment.yaml

      - name: Install unstable dependencies
        if: matrix.experimental == true
        shell: bash -l {0}
        run: |
          python -m pip install \
          -f https://7933911d6844c6c53a7d-47bd50c35cd79bd838daf386af554a83.ssl.cf2.rackcdn.com \
          --no-deps --pre --upgrade \
          numpy \
          pandas; \
          python -m pip install \
          --no-deps --upgrade \
          git+https://github.com/dask/dask \
          git+https://github.com/dask/distributed \
          git+https://github.com/Unidata/cftime \
          git+https://github.com/mapbox/rasterio \
          git+https://github.com/pydata/bottleneck \
          git+https://github.com/pydata/xarray;

      - name: Install trollimage
        shell: bash -l {0}
        run: |
          pip install --no-deps -e .
          # pip forces non-wheel builds if we provide --cython-coverage as a --build-option
          # and that's way too slow
          python setup.py build_ext --inplace --cython-coverage --force

      - name: Run unit tests
        shell: bash -l {0}
        run: |
          pytest --cov=trollimage trollimage/tests --cov-report=xml

      - name: Upload unittest coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: unittests
          file: ./coverage.xml
          env_vars: OS,PYTHON_VERSION,UNSTABLE
